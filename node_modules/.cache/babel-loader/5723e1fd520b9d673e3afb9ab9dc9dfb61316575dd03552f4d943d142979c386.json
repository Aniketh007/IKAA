{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\ikaa\\\\ikaa_hospital\\\\src\\\\pages\\\\payment.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckoutForm({\n  appointmentDetails\n}) {\n  _s();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const createPaypalOrder = async () => {\n    try {\n      // Make a request to your backend to create a PayPal order\n      const response = await axios.post(\"/create-paypal-order\", {\n        appointmentDetails // Pass appointment details to the backend\n      });\n\n      return response.data.orderId;\n    } catch (error) {\n      console.error(\"Error creating PayPal order:\", error);\n      throw new Error(\"Failed to create PayPal order\");\n    }\n  };\n  const handlePaymentSuccess = (details, data) => {\n    // Handle successful payment\n    setMessage(\"Payment succeeded!\");\n    // You can perform further actions upon successful payment\n    // For instance, finalize the booking process on the backend\n    // and update the UI accordingly\n  };\n\n  const paymentOptions = {\n    clientId: \"YOUR_PAYPAL_CLIENT_ID\",\n    // Replace with your PayPal client ID\n    currency: \"USD\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PayPalButton, {\n      options: paymentOptions,\n      createOrder: createPaypalOrder,\n      onSuccess: handlePaymentSuccess,\n      onError: error => setMessage(\"An unexpected error occurred.\"),\n      onCancel: () => setMessage(\"Payment cancelled.\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"payment-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutForm, \"QpGzXH2nlTJwjslYcVryqtdYeeo=\");\n_c = CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useEffect","useState","PayPalButton","axios","jsxDEV","_jsxDEV","CheckoutForm","appointmentDetails","_s","message","setMessage","isLoading","setIsLoading","createPaypalOrder","response","post","data","orderId","error","console","Error","handlePaymentSuccess","details","paymentOptions","clientId","currency","children","options","createOrder","onSuccess","onError","onCancel","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/ikaa/ikaa_hospital/src/pages/payment.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CheckoutForm({ appointmentDetails }) {\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const createPaypalOrder = async () => {\r\n    try {\r\n      // Make a request to your backend to create a PayPal order\r\n      const response = await axios.post(\"/create-paypal-order\", {\r\n        appointmentDetails, // Pass appointment details to the backend\r\n      });\r\n\r\n      return response.data.orderId;\r\n    } catch (error) {\r\n      console.error(\"Error creating PayPal order:\", error);\r\n      throw new Error(\"Failed to create PayPal order\");\r\n    }\r\n  };\r\n\r\n  const handlePaymentSuccess = (details, data) => {\r\n    // Handle successful payment\r\n    setMessage(\"Payment succeeded!\");\r\n    // You can perform further actions upon successful payment\r\n    // For instance, finalize the booking process on the backend\r\n    // and update the UI accordingly\r\n  };\r\n\r\n  const paymentOptions = {\r\n    clientId: \"YOUR_PAYPAL_CLIENT_ID\", // Replace with your PayPal client ID\r\n    currency: \"USD\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PayPalButton\r\n        options={paymentOptions}\r\n        createOrder={createPaypalOrder}\r\n        onSuccess={handlePaymentSuccess}\r\n        onError={(error) => setMessage(\"An unexpected error occurred.\")}\r\n        onCancel={() => setMessage(\"Payment cancelled.\")}\r\n      />\r\n      {/* Show any error or success messages */}\r\n      {message && <div id=\"payment-message\">{message}</div>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,wBAAwB;AACrD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAmB,CAAC,EAAE;EAAAC,EAAA;EAC3D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,sBAAsB,EAAE;QACxDR,kBAAkB,CAAE;MACtB,CAAC,CAAC;;MAEF,OAAOO,QAAQ,CAACE,IAAI,CAACC,OAAO;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;IAClD;EACF,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAACC,OAAO,EAAEN,IAAI,KAAK;IAC9C;IACAN,UAAU,CAAC,oBAAoB,CAAC;IAChC;IACA;IACA;EACF,CAAC;;EAED,MAAMa,cAAc,GAAG;IACrBC,QAAQ,EAAE,uBAAuB;IAAE;IACnCC,QAAQ,EAAE;EACZ,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA,CAACH,YAAY;MACXyB,OAAO,EAAEJ,cAAe;MACxBK,WAAW,EAAEf,iBAAkB;MAC/BgB,SAAS,EAAER,oBAAqB;MAChCS,OAAO,EAAGZ,KAAK,IAAKR,UAAU,CAAC,+BAA+B,CAAE;MAChEqB,QAAQ,EAAEA,CAAA,KAAMrB,UAAU,CAAC,oBAAoB;IAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,EAED1B,OAAO,iBAAIJ,OAAA;MAAK+B,EAAE,EAAC,iBAAiB;MAAAV,QAAA,EAAEjB;IAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAAC3B,EAAA,CA5CuBF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}