{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\ikaa\\\\ikaa_hospital\\\\src\\\\pages\\\\payment.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { PaymentElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckoutForm({\n  appointmentDetails\n}) {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    // Your existing code for Stripe initialization can remain here...\n  }, [stripe]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Use axios to make a request to your backend to create a payment intent\n      const response = await axios.post(\"/create-payment-intent\", {\n        appointmentDetails // Pass appointment details to the backend\n      });\n\n      const {\n        clientSecret\n      } = response.data;\n      const result = await stripe.confirmPayment({\n        elements,\n        confirmParams: {\n          return_url: \"http://localhost:5000\",\n          // Change this to your return URL\n          payment_intent_client_secret: clientSecret // Use the received clientSecret for confirmation\n        }\n      });\n\n      if (result.error) {\n        setMessage(result.error.message);\n      } else {\n        setMessage(\"Payment succeeded!\");\n        // You can perform further actions upon successful payment\n        // For instance, finalize the booking process on the backend\n        // and update the UI accordingly\n      }\n    } catch (error) {\n      setMessage(\"An unexpected error occurred.\");\n    }\n    setIsLoading(false);\n  };\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(PaymentElement, {\n      id: \"payment-element\",\n      options: paymentElementOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isLoading || !stripe || !elements,\n      id: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"button-text\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          id: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 24\n        }, this) : \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"\\r payment-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutForm, \"I2mD8VtLUdS+pxXYAFWCJ5LM4cQ=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useEffect","useState","PaymentElement","useStripe","useElements","axios","jsxDEV","_jsxDEV","CheckoutForm","appointmentDetails","_s","stripe","elements","message","setMessage","isLoading","setIsLoading","handleSubmit","e","preventDefault","response","post","clientSecret","data","result","confirmPayment","confirmParams","return_url","payment_intent_client_secret","error","paymentElementOptions","layout","id","onSubmit","children","options","fileName","_jsxFileName","lineNumber","columnNumber","disabled","className","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/ikaa/ikaa_hospital/src/pages/payment.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { PaymentElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CheckoutForm({ appointmentDetails }) {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Your existing code for Stripe initialization can remain here...\r\n  }, [stripe]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Use axios to make a request to your backend to create a payment intent\r\n      const response = await axios.post(\"/create-payment-intent\", {\r\n        appointmentDetails, // Pass appointment details to the backend\r\n      });\r\n\r\n      const { clientSecret } = response.data;\r\n\r\n      const result = await stripe.confirmPayment({\r\n        elements,\r\n        confirmParams: {\r\n          return_url: \"http://localhost:5000\", // Change this to your return URL\r\n          payment_intent_client_secret: clientSecret, // Use the received clientSecret for confirmation\r\n        },\r\n      });\r\n\r\n      if (result.error) {\r\n        setMessage(result.error.message);\r\n      } else {\r\n        setMessage(\"Payment succeeded!\");\r\n        // You can perform further actions upon successful payment\r\n        // For instance, finalize the booking process on the backend\r\n        // and update the UI accordingly\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"An unexpected error occurred.\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const paymentElementOptions = {\r\n    layout: \"tabs\"\r\n  };\r\n\r\n  return (\r\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n      <PaymentElement id=\"payment-element\" options={paymentElementOptions} />\r\n      <button disabled={isLoading || !stripe || !elements} id=\"submit\">\r\n        <span id=\"button-text\">\r\n          {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\r\n        </span>\r\n      </button>\r\n      {/* Show any error or success messages */}\r\n      {message && <div id=\"\r\n      payment-message\">{message}</div>}\r\n      </form>\r\n);\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}