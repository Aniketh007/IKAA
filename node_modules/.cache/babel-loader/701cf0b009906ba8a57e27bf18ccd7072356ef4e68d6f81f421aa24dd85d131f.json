{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\ikaa\\\\ikaa_hospital\\\\src\\\\pages\\\\profile.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// function Profile() {\n//   const [users, setUsers] = useState([]);\n\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5000/getUsers') // Adjust the URL to match your server endpoint\n//       .then(response => {\n//         setUsers(response.data);\n//       })\n//       .catch(error => {\n//         console.log(error);\n//       });\n//   }, []);\n\n//   return (\n//     <div>\n//       {users.map((user, index) => (\n//         <div key={index}>\n//           <h1>{user.firstname}</h1>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Profile;\n\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pprofile() {\n  _s();\n  const location = useLocation();\n  const user = location.state.user;\n\n  // Use userType as needed in the component\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: user.firstname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Pprofile, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Pprofile;\nexport default Pprofile;\nvar _c;\n$RefreshReg$(_c, \"Pprofile\");","map":{"version":3,"names":["React","useLocation","jsxDEV","_jsxDEV","Pprofile","_s","location","user","state","children","firstname","fileName","_jsxFileName","lineNumber","columnNumber","email","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/ikaa/ikaa_hospital/src/pages/profile.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// function Profile() {\r\n//   const [users, setUsers] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get('http://localhost:5000/getUsers') // Adjust the URL to match your server endpoint\r\n//       .then(response => {\r\n//         setUsers(response.data);\r\n//       })\r\n//       .catch(error => {\r\n//         console.log(error);\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       {users.map((user, index) => (\r\n//         <div key={index}>\r\n//           <h1>{user.firstname}</h1>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Profile;\r\n\r\n\r\nimport React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction Pprofile() {\r\n  const location = useLocation();\r\n  const user = location.state.user;\r\n\r\n  // Use userType as needed in the component\r\n\r\n  return (\r\n    <div>\r\n        <h1>{user.firstname}</h1>\r\n        <h1>{user.email}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pprofile;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,IAAI,GAAGD,QAAQ,CAACE,KAAK,CAACD,IAAI;;EAEhC;;EAEA,oBACEJ,OAAA;IAAAM,QAAA,gBACIN,OAAA;MAAAM,QAAA,EAAKF,IAAI,CAACG;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBX,OAAA;MAAAM,QAAA,EAAKF,IAAI,CAACQ;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV;AAACT,EAAA,CAZQD,QAAQ;EAAA,QACEH,WAAW;AAAA;AAAAe,EAAA,GADrBZ,QAAQ;AAcjB,eAAeA,QAAQ;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}