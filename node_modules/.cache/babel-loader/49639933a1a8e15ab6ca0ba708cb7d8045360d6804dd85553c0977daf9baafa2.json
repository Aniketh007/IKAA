{"ast":null,"code":"import * as types from \"./types\";\nconst initialState = {\n  loading: false,\n  error: false,\n  reports: [],\n  beds: [],\n  doctors: [],\n  patients: [],\n  nurses: [],\n  dashboard: [],\n  Appointments: []\n};\nexport default function dataReducer(state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case types.GET_BED_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case types.GET_BED_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        beds: payload\n      };\n    case types.GET_PATIENT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        patients: payload\n      };\n    case types.GET_ALLDATA_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        dashboard: payload\n      };\n    case types.DISCHARGE_PATIENT_SUCCESS:\n      let data = state.beds.map(ele => {\n        if (ele._id === payload.bed._id) {\n          return payload.bed;\n        }\n        return ele;\n      });\n    case types.DELETE_APPOINTMENT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        Appointments: state.Appointments.filter(ele => ele._id !== payload)\n      };\n    case types.GET_APPOINTMENT_DETAILS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        Appointments: payload\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["types","initialState","loading","error","reports","beds","doctors","patients","nurses","dashboard","Appointments","dataReducer","state","type","payload","GET_BED_REQUEST","GET_BED_SUCCESS","GET_PATIENT_SUCCESS","GET_ALLDATA_SUCCESS","DISCHARGE_PATIENT_SUCCESS","data","map","ele","_id","bed","DELETE_APPOINTMENT_SUCCESS","filter","GET_APPOINTMENT_DETAILS_SUCCESS"],"sources":["C:/Users/LENOVO/Desktop/ikaa/ikaa_hospital/src/Redux/Datas/reducer.js"],"sourcesContent":["import * as types from \"./types\";\n\nconst initialState = {\n  loading: false,\n  error: false,\n  reports: [],\n  beds: [],\n  doctors: [],\n  patients: [],\n  nurses: [],\n  dashboard: [],\n  Appointments: [],\n};\n\nexport default function dataReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case types.GET_BED_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case types.GET_BED_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        beds: payload,\n      };\n    case types.GET_PATIENT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        patients: payload,\n      };\n    case types.GET_ALLDATA_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        dashboard: payload,\n      };\n    case types.DISCHARGE_PATIENT_SUCCESS:\n      let data = state.beds.map((ele) => {\n        if (ele._id === payload.bed._id) {\n          return payload.bed;\n        }\n        return ele;\n      });\n    case types.DELETE_APPOINTMENT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        Appointments: state.Appointments.filter((ele) => ele._id !== payload),\n      };\n    case types.GET_APPOINTMENT_DETAILS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        Appointments: payload,\n      };\n\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,SAAS;AAEhC,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,KAAK;EACZC,OAAO,EAAE,EAAE;EACXC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE,EAAE;EACbC,YAAY,EAAE;AAChB,CAAC;AAED,eAAe,SAASC,WAAWA,CAACC,KAAK,GAAGX,YAAY,EAAE;EAAEY,IAAI;EAAEC;AAAQ,CAAC,EAAE;EAC3E,QAAQD,IAAI;IACV,KAAKb,KAAK,CAACe,eAAe;MACxB,OAAO;QACL,GAAGH,KAAK;QACRV,OAAO,EAAE;MACX,CAAC;IACH,KAAKF,KAAK,CAACgB,eAAe;MACxB,OAAO;QACL,GAAGJ,KAAK;QACRV,OAAO,EAAE,KAAK;QACdG,IAAI,EAAES;MACR,CAAC;IACH,KAAKd,KAAK,CAACiB,mBAAmB;MAC5B,OAAO;QACL,GAAGL,KAAK;QACRV,OAAO,EAAE,KAAK;QACdK,QAAQ,EAAEO;MACZ,CAAC;IACH,KAAKd,KAAK,CAACkB,mBAAmB;MAC5B,OAAO;QACL,GAAGN,KAAK;QACRV,OAAO,EAAE,KAAK;QACdO,SAAS,EAAEK;MACb,CAAC;IACH,KAAKd,KAAK,CAACmB,yBAAyB;MAClC,IAAIC,IAAI,GAAGR,KAAK,CAACP,IAAI,CAACgB,GAAG,CAAEC,GAAG,IAAK;QACjC,IAAIA,GAAG,CAACC,GAAG,KAAKT,OAAO,CAACU,GAAG,CAACD,GAAG,EAAE;UAC/B,OAAOT,OAAO,CAACU,GAAG;QACpB;QACA,OAAOF,GAAG;MACZ,CAAC,CAAC;IACJ,KAAKtB,KAAK,CAACyB,0BAA0B;MACnC,OAAO;QACL,GAAGb,KAAK;QACRV,OAAO,EAAE,KAAK;QACdQ,YAAY,EAAEE,KAAK,CAACF,YAAY,CAACgB,MAAM,CAAEJ,GAAG,IAAKA,GAAG,CAACC,GAAG,KAAKT,OAAO;MACtE,CAAC;IACH,KAAKd,KAAK,CAAC2B,+BAA+B;MACxC,OAAO;QACL,GAAGf,KAAK;QACRV,OAAO,EAAE,KAAK;QACdQ,YAAY,EAAEI;MAChB,CAAC;IAEH;MACE,OAAOF,KAAK;EAChB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}